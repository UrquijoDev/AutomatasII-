package codigo;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RocaPez
 */

/* Pendientes
Agregar tokens de errores
Buscar como manejar la ñ y otros caracteres con comportamiento inusual
Agregar en tabla tokens 4ta columna del tipo de token ejemplo token 100, tipo de token = Identificador, token 101 tipo token = Numero
Agregar salida exitosa sin errores en textArea
Comprobar tokens del condicional del file.seek()

*/

public class Compilador extends javax.swing.JFrame {

    private ArrayList<Token> tokens;
    private Lexico lexer;
    private Sintactico sintaxis;
    private File archivo;
    private String archivoPath;

    /**
     * Creates new form Compilador
     */
    public Compilador() throws IOException {
        initComponents();
        init();

    }

    private void init() throws IOException {
        tokens = new ArrayList<>();

     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        paneCodigo = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTokens = new javax.swing.JTable();
        lbl_tablaTokens = new javax.swing.JLabel();
        btn_compilar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtA_salida = new javax.swing.JTextArea();
        btn_abrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(paneCodigo);

        tableTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lexema", "Token", "[Línea]"
            }
        ));
        jScrollPane2.setViewportView(tableTokens);

        lbl_tablaTokens.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_tablaTokens.setText("Tabla de Simbolos");

        btn_compilar.setText("Compilar");
        btn_compilar.setEnabled(false);
        btn_compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_compilarActionPerformed(evt);
            }
        });

        txtA_salida.setColumns(20);
        txtA_salida.setRows(5);
        jScrollPane3.setViewportView(txtA_salida);

        btn_abrir.setText("Abrir archivo");
        btn_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btn_abrir)
                .addGap(102, 102, 102)
                .addComponent(btn_compilar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_tablaTokens, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tablaTokens)
                    .addComponent(btn_compilar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_abrir))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        lbl_tablaTokens.getAccessibleContext().setAccessibleName("Tabla de Simbolos");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_compilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_compilarActionPerformed
        txtA_salida.setText("");
        compilar();
    }//GEN-LAST:event_btn_compilarActionPerformed

    private void btn_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abrirActionPerformed
        // TODO add your handling code here:

        //examinar
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("txt file", "txt");

        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            archivo = chooser.getSelectedFile();
            archivoPath = chooser.getSelectedFile().getAbsolutePath();
            try {

                paneCodigo.read(new BufferedReader(new FileReader(archivoPath)), null);
                btn_compilar.setEnabled(true);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_abrirActionPerformed

    private void compilar() {
        analizadorLexico();
        llenarTablaTokens();
        if(!lexer.errorFound){
         analizadorSintactico();
        } 
       
    }

    private void ReadTxtAreaArchivo() {
        try {
            lexer = new Lexico(archivoPath);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void analizadorLexico() {
        tokens.clear();

        try {
            File codigo = new File(archivoPath);
            FileOutputStream output = new FileOutputStream(codigo);
            byte[] bytesText = paneCodigo.getText().getBytes();
            output.write(bytesText);
            BufferedReader entrada = new BufferedReader(new InputStreamReader(new FileInputStream(codigo), "UTF8"));
            lexer = new Lexico(archivoPath);

        } catch (FileNotFoundException ex) {
            System.out.println("El archivo no pudo ser encontrado... " + ex.getMessage());
        } catch (IOException ex) {
            System.out.println("Error al escribir en el archivo... " + ex.getMessage());
        }

        tokens = lexer.lexico(txtA_salida);

    }
    
    private void analizadorSintactico(){
        sintaxis = new Sintactico();
        sintaxis.cabeza = lexer.cabeza;
        
        sintaxis.sintaxis();
        
        txtA_salida.append(sintaxis.resultado);
        
    }

    private void llenarTablaTokens() {
        DefaultTableModel model = (DefaultTableModel) tableTokens.getModel();

        // Limpiar tabla
        model.setRowCount(0);
 
        tokens.forEach(token -> {
            Object[] data = new Object[]{
                token.getLexema(),
                token.getidToken(),
                "[" + token.getLinea() + "]"
            };
            model.addRow(data);
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Compilador().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Compilador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_abrir;
    private javax.swing.JButton btn_compilar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_tablaTokens;
    private javax.swing.JTextPane paneCodigo;
    private javax.swing.JTable tableTokens;
    private javax.swing.JTextArea txtA_salida;
    // End of variables declaration//GEN-END:variables
}
